spring.application.name=teste-boticario

# JWT
# Secret e/ou Credenciais no config � errado, mas nesse caso (acho que) n�o tem problema...
# Lembrado que "Secret" N�O � uma senha, e sim uma chave,
# por isso usei o puttygen pra gerar uma chave RSA de 256 bits.
jwt.secret=AAAAB3NzaC1yc2EAAAADAQABAAAAIQCdHhqw9SwL0Ljvqx/0pB7aUKReB+nKYl08EIEO6h41Kw==
spring.security.user.name=xmrGmb7PWFwSzzx6TBxxEGyA7n9zGaC7UWs6GWMruGZMGMNG
# TODO: Mudar para BCrypt caso o encoder seja atualizado
spring.security.user.password=0y1GaVyJ6szGu7O3dR2Ax8ijucQujxkUZs6Y715MiQ5hhLiEi6NAbfMJGHqpad96

#Caffeine + Spring Cache
spring.cache.jcache.provider=com.github.benmanes.caffeine.jcache.spi.CaffeineCachingProvider
spring.cache.cache-names=buckets
spring.cache.caffeine.spec=maximumSize=10000,expireAfterAccess=60s

#Bucket4j
spring.main.allow-bean-definition-overriding=true

#Regras
bucket4j.enabled=true
bucket4j.filters[0].cache-name=buckets
bucket4j.filters[0].http-response-body={ "message": "Too many requests" }
bucket4j.filters[0].url=.*
bucket4j.filters[0].rate-limits[0].skip-condition=getRequestURI().contains('/healthcheck')
bucket4j.filters[0].rate-limits[0].cache-key=getRequestURI()
bucket4j.filters[0].rate-limits[0].bandwidths[0].capacity=5
bucket4j.filters[0].rate-limits[0].bandwidths[0].time=1
bucket4j.filters[0].rate-limits[0].bandwidths[0].unit=minutes
bucket4j.filters[0].rate-limits[0].bandwidths[0].refill-speed=interval